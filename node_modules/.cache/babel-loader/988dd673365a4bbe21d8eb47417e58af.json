{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVEO\\\\Projects\\\\react projects\\\\frontend-stock\\\\src\\\\containers\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {},\n      isLoaded: false,\n      total_profit: {\n        id: 0,\n        name: \"\"\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(\"https://flaskstockapi.herokuapp.com/api/profit\");\n      const till_yesterday_profit = await fetch(\"https://flaskstockapi.herokuapp.com/api/till_yesterdays_profit?filter[date]=${yesterday}\");\n      const data = await res.json();\n      const profit = await till_yesterday_profit.json();\n      this.setState({\n        isLoaded: true,\n        items: data,\n        yesterday_profit: profit.data\n      });\n      console.log(\"data printingn\", profit.data);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    var {\n      isLoaded\n    } = this.state; // const sort_yesterday_profit= (till_yesterday) =>{\n    //   var d ={}\n    //   console.log(\"datt\",till_yesterday)\n    //   till_yesterday.map(element => {\n    //     var id = element.attributes.strategy_id\n    //     d[id] = element.attributes.profit\n    //   });\n    //   return d\n    //   console.log(\"hello\")\n    // }\n\n    const data = this.state.items.data;\n    const meta = this.state.items.meta;\n    const p_f = this.state.yesterday_profit;\n    var y_profit = {};\n\n    if (p_f) {\n      p_f.map(element => {\n        y_profit[element.attributes.strategy_id] = element.attributes.profit;\n      });\n    }\n\n    console.log(\"datt\", y_profit[1]);\n    var ruppe_number = \"\";\n\n    const numberFormat = value => {\n      ruppe_number = new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR'\n      }).format(value).split('.')[0];\n\n      if (ruppe_number[0] == \"-\") {\n        return ruppe_number.slice(0, 1) + ruppe_number.slice(2);\n      } else {\n        return ruppe_number.slice(1);\n      }\n    };\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      }, \"Data is Loading Please Wait .....\", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => window.location.reload(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, \"Click to reload again\"));\n    } else {\n      const rowColor = value => {\n        if (parseInt(value) >= 0 || value == \"buy\") {\n          return 'green';\n        } else {\n          return 'red';\n        }\n      };\n\n      const display = data.map((d, key) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }\n        }, d.id), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }, d.name), /*#__PURE__*/React.createElement(\"td\", {\n          className: rowColor(d.completed.profit),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 16\n          }\n        }, numberFormat(d.completed.profit), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n          className: rowColor(d.on_going.profit),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 16\n          }\n        }, numberFormat(d.on_going.profit), \" / \", d.on_going.trades), /*#__PURE__*/React.createElement(\"td\", {\n          className: rowColor(d.on_going.action),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 16\n          }\n        }, d.on_going.action.toUpperCase()), /*#__PURE__*/React.createElement(\"td\", {\n          className: rowColor(d.total.profit - y_profit[d.id]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 16\n          }\n        }, \" \", numberFormat(d.total.profit - (y_profit[d.id] = y_profit[d.id] || 0))), /*#__PURE__*/React.createElement(\"td\", {\n          className: rowColor(d.total.profit),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 16\n          }\n        }, numberFormat(d.total.profit), \" / \", d.total.trades));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => window.location.reload(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, \"Click to reload!\")), /*#__PURE__*/React.createElement(\"table\", {\n        class: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, \"strategy_id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, \"stock_name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, \"completed_profit\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }, \"on_going_profit\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }, \"action\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, \"todays_profit\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, \"total_profit\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        class: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, display), /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      }, \"Total Profit: \"), /*#__PURE__*/React.createElement(\"th\", {\n        className: rowColor(meta.total_completed_profits),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }, numberFormat(meta.total_completed_profits)), /*#__PURE__*/React.createElement(\"th\", {\n        className: rowColor(meta.total_ongoing_profits),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, numberFormat(meta.total_ongoing_profits)), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        className: rowColor(meta.total_profits),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, numberFormat(meta.total_profits))))));\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/LENOVEO/Projects/react projects/frontend-stock/src/containers/Home/Home.js"],"names":["React","Component","Home","constructor","props","state","items","isLoaded","total_profit","id","name","componentDidMount","res","fetch","till_yesterday_profit","data","json","profit","setState","yesterday_profit","console","log","e","error","render","meta","p_f","y_profit","map","element","attributes","strategy_id","ruppe_number","numberFormat","value","Intl","NumberFormat","style","currency","format","split","slice","window","location","reload","rowColor","parseInt","display","d","key","completed","on_going","trades","action","toUpperCase","total","total_completed_profits","total_ongoing_profits","total_profits"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\r\nconstructor(props){\r\nsuper(props)\r\n  this.state={\r\n    items:{},\r\n    isLoaded:false,\r\n    total_profit: {\r\n      id:0,\r\n      name:\"\"\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\r\n\r\nasync componentDidMount() {\r\n  try {\r\n      const res = await fetch(\"https://flaskstockapi.herokuapp.com/api/profit\");\r\n      const till_yesterday_profit = await fetch(\"https://flaskstockapi.herokuapp.com/api/till_yesterdays_profit?filter[date]=${yesterday}\")\r\n      const data = await res.json();\r\n      const profit = await till_yesterday_profit.json();\r\n      this.setState({\r\n        isLoaded:true,\r\n        items:data,\r\n        yesterday_profit: profit.data\r\n      })\r\n      console.log(\"data printingn\",profit.data);\r\n  } catch(e) {\r\n      console.error(e);\r\n  }\r\n}\r\n\r\n\r\n  render() {\r\n    \r\n    var {isLoaded } =  this.state;\r\n    // const sort_yesterday_profit= (till_yesterday) =>{\r\n    //   var d ={}\r\n    //   console.log(\"datt\",till_yesterday)\r\n    //   till_yesterday.map(element => {\r\n    //     var id = element.attributes.strategy_id\r\n    //     d[id] = element.attributes.profit\r\n    //   });\r\n    //   return d\r\n    //   console.log(\"hello\")\r\n    // }\r\n    const data = this.state.items.data\r\n    const meta = this.state.items.meta\r\n    const p_f = this.state.yesterday_profit\r\n    \r\n    var y_profit={}\r\n    if(p_f){\r\n      p_f.map(element => {\r\n        y_profit[element.attributes.strategy_id] = element.attributes.profit\r\n      });\r\n    }\r\n    console.log(\"datt\",y_profit[1])\r\n    var ruppe_number = \"\"\r\n    const numberFormat=(value) => {\r\n      ruppe_number =  new Intl.NumberFormat('en-IN', {\r\n        style: 'currency',\r\n        currency: 'INR'\r\n      }).format(value).split('.')[0];\r\n\r\n      if(ruppe_number[0]==\"-\" ){\r\n        return ruppe_number.slice(0,1) + ruppe_number.slice(2)\r\n      }\r\n      else{\r\n        return ruppe_number.slice(1)\r\n      }\r\n    }\r\n\r\n    if (!isLoaded){\r\n      return <div class=\"loading\">\r\n      Data is Loading Please Wait .....\r\n      <button onClick={() => window.location.reload(false)}>Click to reload again</button>\r\n      </div>\r\n    }\r\n    else{\r\n      \r\n      const rowColor = (value) => {\r\n      if (parseInt(value) >= 0 || value == \"buy\") {\r\n         return 'green';\r\n      } else {\r\n         return 'red';\r\n      }\r\n   }\r\n\r\n      const display = data.map((d, key) => {\r\n        return (\r\n            \r\n            <tr  key={key} >\r\n              <th >{d.id}</th>\r\n              <th>{d.name}</th>\r\n               <td className={rowColor(d.completed.profit)} >{numberFormat(d.completed.profit)} </td>\r\n               <td className={rowColor(d.on_going.profit)} >{numberFormat(d.on_going.profit)} / {d.on_going.trades}</td>\r\n               <td className={rowColor(d.on_going.action)}>{d.on_going.action.toUpperCase()}</td>\r\n               \r\n               <td className={rowColor(d.total.profit - y_profit[d.id])}> {numberFormat(d.total.profit - (y_profit[d.id]=y_profit[d.id] || 0))}</td>\r\n               <td className={rowColor(d.total.profit)} >{numberFormat(d.total.profit)} / {d.total.trades}</td>\r\n            </tr>\r\n\r\n          );\r\n        });\r\n      \r\n        return(\r\n          <div>\r\n            <div class=\"loading\">\r\n              <button onClick={() => window.location.reload(false)}>Click to reload!</button>\r\n            </div>\r\n            \r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th >strategy_id</th>\r\n                  <th >stock_name</th>\r\n                  <th >completed_profit</th>\r\n                  <th >on_going_profit</th>\r\n                  <th >action</th>\r\n                  \r\n                  <th >todays_profit</th>\r\n                  <th >total_profit</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody class =\"table\">{display}</tbody>\r\n              <thead >\r\n                <tr>\r\n                  <th ></th>\r\n                  <th >Total Profit: </th>\r\n                  <th className={rowColor(meta.total_completed_profits)} >{numberFormat(meta.total_completed_profits)}</th>\r\n                  <th className={rowColor(meta.total_ongoing_profits)} >{numberFormat(meta.total_ongoing_profits)}</th>\r\n                  <th ></th>\r\n                  <th ></th>\r\n                  <th className={rowColor(meta.total_profits)} >{numberFormat(meta.total_profits)}</th>\r\n\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n     \r\n      \r\n     \r\n    \r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}