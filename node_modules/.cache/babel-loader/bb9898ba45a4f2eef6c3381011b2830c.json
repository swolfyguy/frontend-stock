{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVEO\\\\Projects\\\\react projects\\\\frontend-stock\\\\src\\\\containers\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {},\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(\"https://flaskstockapi.herokuapp.com/api/profit\");\n      const data = await res.json();\n      this.setState({\n        isLoaded: true,\n        items: data\n      });\n      console.log(\"data printingn\", data);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    var {\n      isLoaded\n    } = this.state;\n    const data = this.state.items;\n    var ruppe_number = \"\";\n\n    const numberFormat = value => {\n      ruppe_number = new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR'\n      }).format(value).split('.')[0];\n\n      if (ruppe_number[0] == \"-\") {\n        return ruppe_number.slice(0, 1) + ruppe_number.slice(2);\n      } else {\n        return ruppe_number.slice(1);\n      }\n    };\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      }, \"Data is Loading Please Wait .....\", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => window.location.reload(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, \"Click to reload again\"));\n    } else {\n      const display = data.map((d, key) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, d.id), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }\n        }, d.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 16\n          }\n        }, numberFormat(d.completed.profit), \" / \", d.completed.trades), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }\n        }, numberFormat(d.on_going.profit), \" / \", d.on_going.trades), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 16\n          }\n        }, numberFormat(d.total.profit), \" / \", d.total.trades));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => window.location.reload(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, \"Click to reload!\")), /*#__PURE__*/React.createElement(\"table\", {\n        class: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, \"stock_id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, \"stock_name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, \"completed_profits\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, \"on_going_profit\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }, \"total_profits\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        class: \"table table-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, display)));\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/LENOVEO/Projects/react projects/frontend-stock/src/containers/Home/Home.js"],"names":["React","Component","Home","constructor","props","state","items","isLoaded","componentDidMount","res","fetch","data","json","setState","console","log","e","error","render","ruppe_number","numberFormat","value","Intl","NumberFormat","style","currency","format","split","slice","window","location","reload","display","map","d","key","id","name","completed","profit","trades","on_going","total"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAE7BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AACE,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC,EADG;AAETC,MAAAA,QAAQ,EAAC;AAFA,KAAX;AAMD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAC,IADG;AAEZD,QAAAA,KAAK,EAACK;AAFM,OAAd;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BJ,IAA7B;AACH,KARD,CAQE,OAAMK,CAAN,EAAS;AACPF,MAAAA,OAAO,CAACG,KAAR,CAAcD,CAAd;AACH;AACF;;AAGCE,EAAAA,MAAM,GAAG;AACP,QAAI;AAACX,MAAAA;AAAD,QAAe,KAAKF,KAAxB;AACA,UAAMM,IAAI,GAAG,KAAKN,KAAL,CAAWC,KAAxB;AACA,QAAIa,YAAY,GAAG,EAAnB;;AACA,UAAMC,YAAY,GAAEC,KAAD,IAAW;AAC5BF,MAAAA,YAAY,GAAI,IAAIG,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7CC,QAAAA,KAAK,EAAE,UADsC;AAE7CC,QAAAA,QAAQ,EAAE;AAFmC,OAA/B,EAGbC,MAHa,CAGNL,KAHM,EAGCM,KAHD,CAGO,GAHP,EAGY,CAHZ,CAAhB;;AAKA,UAAGR,YAAY,CAAC,CAAD,CAAZ,IAAiB,GAApB,EAAyB;AACvB,eAAOA,YAAY,CAACS,KAAb,CAAmB,CAAnB,EAAqB,CAArB,IAA0BT,YAAY,CAACS,KAAb,CAAmB,CAAnB,CAAjC;AACD,OAFD,MAGI;AACF,eAAOT,YAAY,CAACS,KAAb,CAAmB,CAAnB,CAAP;AACD;AACF,KAZD;;AAcA,QAAI,CAACrB,QAAL,EAAc;AACZ,0BAAO;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAEP;AAAQ,QAAA,OAAO,EAAE,MAAMsB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFO,CAAP;AAID,KALD,MAMI;AACF,YAAMC,OAAO,GAAGrB,IAAI,CAACsB,GAAL,CAAS,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACnC,4BAEI;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,CAAC,CAACE,EAAnB,CADF,eAEE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBF,CAAC,CAACG,IAAnB,CAFF,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOjB,YAAY,CAACc,CAAC,CAACI,SAAF,CAAYC,MAAb,CAAnB,SAA4CL,CAAC,CAACI,SAAF,CAAYE,MAAxD,CALH,eAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOpB,YAAY,CAACc,CAAC,CAACO,QAAF,CAAWF,MAAZ,CAAnB,SAA2CL,CAAC,CAACO,QAAF,CAAWD,MAAtD,CARH,eAWG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMpB,YAAY,CAACc,CAAC,CAACQ,KAAF,CAAQH,MAAT,CAAlB,SAAuCL,CAAC,CAACQ,KAAF,CAAQF,MAA/C,CAXH,CAFJ;AAgBC,OAjBa,CAAhB;AAmBE,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAE,MAAMX,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,eAKE;AAAO,QAAA,KAAK,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,KAAK,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXF,CADF,CADF,eAiBE;AAAO,QAAA,KAAK,EAAE,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCC,OAAlC,CAjBF,CALF,CADF;AA4BH;AAKF;;AAxG0B;;AA2G7B,eAAe9B,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\r\nconstructor(props){\r\nsuper(props)\r\n  this.state={\r\n    items:{},\r\n    isLoaded:false\r\n  }\r\n\r\n  \r\n}\r\n\r\nasync componentDidMount() {\r\n  try {\r\n      const res = await fetch(\"https://flaskstockapi.herokuapp.com/api/profit\");\r\n      const data = await res.json();\r\n      this.setState({\r\n        isLoaded:true,\r\n        items:data\r\n      })\r\n      console.log(\"data printingn\",data);\r\n  } catch(e) {\r\n      console.error(e);\r\n  }\r\n}\r\n\r\n\r\n  render() {\r\n    var {isLoaded } =  this.state;\r\n    const data = this.state.items\r\n    var ruppe_number = \"\"\r\n    const numberFormat=(value) => {\r\n      ruppe_number =  new Intl.NumberFormat('en-IN', {\r\n        style: 'currency',\r\n        currency: 'INR'\r\n      }).format(value).split('.')[0];\r\n\r\n      if(ruppe_number[0]==\"-\" ){\r\n        return ruppe_number.slice(0,1) + ruppe_number.slice(2)\r\n      }\r\n      else{\r\n        return ruppe_number.slice(1)\r\n      }\r\n    }\r\n\r\n    if (!isLoaded){\r\n      return <div class=\"loading\">\r\n      Data is Loading Please Wait .....\r\n      <button onClick={() => window.location.reload(false)}>Click to reload again</button>\r\n      </div>\r\n    }\r\n    else{\r\n      const display = data.map((d, key) => {\r\n        return (\r\n            \r\n            <tr key={key}>\r\n              <th scope=\"row\">{d.id}</th>\r\n              <th scope=\"row\">{d.name}</th>\r\n               \r\n          \r\n               <td  >{numberFormat(d.completed.profit)} / {d.completed.trades}</td>\r\n\r\n              \r\n               <td  >{numberFormat(d.on_going.profit)} / {d.on_going.trades}</td>\r\n\r\n               {/* <td  ></td> */}\r\n               <td >{numberFormat(d.total.profit)} / {d.total.trades}</td>\r\n            </tr>\r\n          );\r\n        });\r\n      \r\n        return(\r\n          <div>\r\n            <div class=\"loading\">\r\n              <button onClick={() => window.location.reload(false)}>Click to reload!</button>\r\n            </div>\r\n            \r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th >stock_id</th>\r\n                  <th >stock_name</th>\r\n\r\n                  {/* <th >completed_trades</th> */}\r\n                  <th >completed_profits</th>\r\n                 \r\n                  {/* <th >on_going_trades</th> */}\r\n                  <th >on_going_profit</th>\r\n                  \r\n                  {/* <th >total_trades</th> */}\r\n                  <th >total_profits</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody class =\"table table-dark\">{display}</tbody>\r\n            </table>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n     \r\n      \r\n     \r\n    \r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}