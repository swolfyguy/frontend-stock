{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVEO\\\\Projects\\\\react projects\\\\frontend-stock\\\\src\\\\containers\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {},\n      isLoaded: false,\n      total_profit: {\n        id: 0,\n        name: \"\"\n      }\n    };\n  }\n\n  name(params) {\n    console.log(\"hello\");\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(\"https://flaskstockapi.herokuapp.com/api/profit\");\n      const data = await res.json();\n      this.setState({\n        isLoaded: true,\n        items: data\n      });\n      console.log(\"data printingn\", data);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    var {\n      isLoaded\n    } = this.state;\n    const data = this.state.items.data;\n    const meta = this.state.items.meta;\n    var ruppe_number = \"\";\n\n    const numberFormat = value => {\n      ruppe_number = new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR'\n      }).format(value).split('.')[0];\n\n      if (ruppe_number[0] == \"-\") {\n        return ruppe_number.slice(0, 1) + ruppe_number.slice(2);\n      } else {\n        return ruppe_number.slice(1);\n      }\n    };\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      }, \"Data is Loading Please Wait .....\", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => window.location.reload(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, \"Click to reload again\"));\n    } else {\n      const rowColor = value => {\n        if (parseInt(value) >= 0) {\n          return 'green';\n        } else {\n          return 'red';\n        }\n      };\n\n      const display = data.map((d, key) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }\n        }, d.id), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }\n        }, d.name), /*#__PURE__*/React.createElement(\"td\", {\n          className: rowColor(d.completed.profit),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }\n        }, numberFormat(d.completed.profit), \" / \", d.completed.trades), /*#__PURE__*/React.createElement(\"td\", {\n          className: rowColor(d.on_going.profit),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 16\n          }\n        }, numberFormat(d.on_going.profit), \" / \", d.on_going.trades), /*#__PURE__*/React.createElement(\"td\", {\n          className: rowColor(d.total.profit),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 16\n          }\n        }, numberFormat(d.total.profit), \" / \", d.total.trades));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => window.location.reload(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, \"Click to reload!\")), /*#__PURE__*/React.createElement(\"table\", {\n        class: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }, \"stock_id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, \"stock_name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, \"completed_profit\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }, \"on_going_profit\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }, \"total_profit\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        class: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, display), /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, \"Total Profit: \"), /*#__PURE__*/React.createElement(\"th\", {\n        className: rowColor(d.completed.profit),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, numberFormat(meta.total_completed_profits)), /*#__PURE__*/React.createElement(\"th\", {\n        className: rowColor(d.completed.profit),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, numberFormat(meta.total_ongoing_profits)), /*#__PURE__*/React.createElement(\"th\", {\n        className: rowColor(d.completed.profit),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }, numberFormat(meta.total_profits))))));\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/LENOVEO/Projects/react projects/frontend-stock/src/containers/Home/Home.js"],"names":["React","Component","Home","constructor","props","state","items","isLoaded","total_profit","id","name","params","console","log","componentDidMount","res","fetch","data","json","setState","e","error","render","meta","ruppe_number","numberFormat","value","Intl","NumberFormat","style","currency","format","split","slice","window","location","reload","rowColor","parseInt","display","map","d","key","completed","profit","trades","on_going","total","total_completed_profits","total_ongoing_profits","total_profits"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\r\nconstructor(props){\r\nsuper(props)\r\n  this.state={\r\n    items:{},\r\n    isLoaded:false,\r\n    total_profit: {\r\n      id:0,\r\n      name:\"\"\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\r\nname(params) {\r\n  console.log(\"hello\")\r\n}\r\nasync componentDidMount() {\r\n  try {\r\n      const res = await fetch(\"https://flaskstockapi.herokuapp.com/api/profit\");\r\n      const data = await res.json();\r\n      this.setState({\r\n        isLoaded:true,\r\n        items:data\r\n      })\r\n      console.log(\"data printingn\",data);\r\n  } catch(e) {\r\n      console.error(e);\r\n  }\r\n}\r\n\r\n\r\n  render() {\r\n    var {isLoaded } =  this.state;\r\n    const data = this.state.items.data\r\n    const meta = this.state.items.meta\r\n    var ruppe_number = \"\"\r\n    const numberFormat=(value) => {\r\n      ruppe_number =  new Intl.NumberFormat('en-IN', {\r\n        style: 'currency',\r\n        currency: 'INR'\r\n      }).format(value).split('.')[0];\r\n\r\n      if(ruppe_number[0]==\"-\" ){\r\n        return ruppe_number.slice(0,1) + ruppe_number.slice(2)\r\n      }\r\n      else{\r\n        return ruppe_number.slice(1)\r\n      }\r\n    }\r\n\r\n    if (!isLoaded){\r\n      return <div class=\"loading\">\r\n      Data is Loading Please Wait .....\r\n      <button onClick={() => window.location.reload(false)}>Click to reload again</button>\r\n      </div>\r\n    }\r\n    else{\r\n      \r\n      const rowColor = (value) => {\r\n      if (parseInt(value) >= 0) {\r\n         return 'green';\r\n      } else {\r\n         return 'red';\r\n      }\r\n   }\r\n      const display = data.map((d, key) => {\r\n        return (\r\n            \r\n            <tr  key={key} >\r\n              <th >{d.id}</th>\r\n              <th>{d.name}</th>\r\n               <td className={rowColor(d.completed.profit)} >{numberFormat(d.completed.profit)} / {d.completed.trades}</td>\r\n               <td className={rowColor(d.on_going.profit)} >{numberFormat(d.on_going.profit)} / {d.on_going.trades}</td>\r\n               <td className={rowColor(d.total.profit)} >{numberFormat(d.total.profit)} / {d.total.trades}</td>\r\n            </tr>\r\n\r\n          );\r\n        });\r\n      \r\n        return(\r\n          <div>\r\n            <div class=\"loading\">\r\n              <button onClick={() => window.location.reload(false)}>Click to reload!</button>\r\n            </div>\r\n            \r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th >stock_id</th>\r\n                  <th >stock_name</th>\r\n                  <th >completed_profit</th>\r\n                  <th >on_going_profit</th>\r\n                  <th >total_profit</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody class =\"table\">{display}</tbody>\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th ></th>\r\n                  <th >Total Profit: </th>\r\n                  <th className={rowColor(d.completed.profit)} >{numberFormat(meta.total_completed_profits)}</th>\r\n                  <th className={rowColor(d.completed.profit)} >{numberFormat(meta.total_ongoing_profits)}</th>\r\n                  <th className={rowColor(d.completed.profit)} >{numberFormat(meta.total_profits)}</th>\r\n\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n     \r\n      \r\n     \r\n    \r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}